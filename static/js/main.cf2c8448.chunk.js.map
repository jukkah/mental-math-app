{"version":3,"sources":["Button.js","Numpad.js","Field.js","App.js","store/calculator.js","store/reducers.js","store/models.js","store/index.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","value","onClick","react_default","a","createElement","className","useCallback","Numpad","onChange","src_Button","Field","AppContainer","connect","_ref2","_ref2$store","store","equation","answer","valid","_ref3","_ref3$store","updateAnswer","updateAnswerAsync","newFormula","newFormulaAsync","src_Field","e","detail","src_Numpad","evaluate","beforeRound","removeSpaces","parenthesis","pow","mul","div","add","sub","isNaN","input","replace","_","n","b","String","Math","setFormula","state","formula","resetEquation","Object","objectSpread","resetCorrectAnswer","floor","random","length","action","resetAnswer","setAnswer","clearAnswer","correctAnswer","resetValid","validateAnswer","reducers","newEquation","effects","dispatch","_updateAnswerAsync","asyncToGenerator","regenerator_default","mark","_callee","rootState","wrap","_context","prev","next","isInvalidAnswer","sleep","isValidAnswer","stop","_x","_x2","apply","this","arguments","prompt","newState","timeout","Promise","resolve","setTimeout","init","models","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf2c8448.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\n\nconst Button = ({ children, value, onClick }) => (\n    <button\n        className=\"button\"\n        onClick={useCallback(() => onClick(value), [onClick, value])}\n    >\n        {children || value}\n    </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nconst Numpad = ({ onChange }) => (\n    <div className=\"numpad\">\n        <Button value=\"1\" onClick={onChange}/>\n        <Button value=\"2\" onClick={onChange}/>\n        <Button value=\"3\" onClick={onChange}/>\n\n        <Button value=\"4\" onClick={onChange}/>\n        <Button value=\"5\" onClick={onChange}/>\n        <Button value=\"6\" onClick={onChange}/>\n\n        <Button value=\"7\" onClick={onChange}/>\n        <Button value=\"8\" onClick={onChange}/>\n        <Button value=\"9\" onClick={onChange}/>\n\n        <Button value=\",\" onClick={onChange}/>\n        <Button value=\"0\" onClick={onChange}/>\n        <Button value=\"clear\" onClick={onChange}><i className=\"material-icons\">backspace</i></Button>\n    </div>\n);\n\nexport default Numpad;\n","import React from 'react';\n\nconst Field = ({ children, className, onClick }) => (\n    <div className={className + ' field'} onClick={onClick}>\n        {children}\n    </div>\n);\n\nexport default Field;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport Numpad from './Numpad';\nimport Field from './Field';\n\nexport const App = ({ equation, answer, valid, updateAnswer, newFormula }) => (\n    <div className=\"page\">\n        <Field onClick={useCallback((e) => e.detail === 3 && newFormula(), [newFormula])}>\n            {equation}\n        </Field>\n        <Field className={valid ? '' : 'error'}>\n            {answer}\n        </Field>\n        <Numpad onChange={updateAnswer}/>\n    </div>\n);\n\nconst mapState = ({ store: { equation, answer, valid } }) => ({\n    equation,\n    answer,\n    valid,\n});\n\nconst mapDispatch = ({ store: { updateAnswerAsync, newFormulaAsync } }) => ({\n    updateAnswer: updateAnswerAsync,\n    newFormula: newFormulaAsync\n});\n\nconst AppContainer = connect(mapState, mapDispatch)(App);\n\nexport default AppContainer;\n","export const assignNumbers = formula => formula.replace(\n    /#+/g,\n    (n) => Math.floor(Math.random() * Math.pow(10, n.length))\n);\n\nexport const evaluate = equation => {\n    equation = removeSpaces(equation);\n\n    let beforeRound;\n    do {\n        beforeRound = equation;\n        equation = parenthesis(equation);\n        equation = pow(equation);\n        equation = mul(equation);\n        equation = div(equation);\n        equation = add(equation);\n        equation = sub(equation);\n    } while (isNaN(equation) || equation !== beforeRound);\n    return equation;\n};\n\nconst removeSpaces = input => input.replace(\n    / /g,\n    ''\n);\n\nconst parenthesis = equation => equation.replace(\n    /\\((\\d+)\\)/g,\n    (_, n) => n\n);\n\nconst pow = equation => equation.replace(\n    /(\\d+)\\^(\\d+)/g,\n    (_, a, b) => String(Math.pow(a, b))\n);\n\nconst mul = equation => equation.replace(\n    /(\\d+)[×·*](\\d+)/g,\n    (_, a, b) => String(a * b)\n);\n\nconst div = equation => equation.replace(\n    /(\\d+)[÷/](\\d+)/g,\n    (_, a, b) => b === '0' ? 'NaN' : String(a / b)\n);\n\nconst add = equation => equation.replace(\n    /(\\d+)[+](\\d+)/g,\n    (_, a, b) => String(+a + +b)\n);\n\nconst sub = equation => equation.replace(\n    /(\\d+)[-−](\\d+)/g,\n    (_, a, b) => String(a - b)\n);\n","import { assignNumbers, evaluate } from './calculator';\n\nexport const setFormula = (state, formula) => resetEquation({\n    ...state,\n    formula,\n});\n\nexport const resetEquation = (state) => resetCorrectAnswer({\n    ...state,\n    equation: assignNumbers(state.formula),\n});\n\nexport const updateAnswer = (state, action) => action === 'clear'\n    ? resetAnswer(state)\n    : setAnswer(state, state.answer + action);\n\nexport const clearAnswer = (state) => ({\n    ...state,\n    answer: '',\n});\n\nconst resetCorrectAnswer = (state) => resetAnswer({\n    ...state,\n    correctAnswer: evaluate(state.equation),\n});\n\nconst resetAnswer = (state) => resetValid(clearAnswer(state));\n\nconst resetValid = (state) => ({\n    ...state,\n    valid: true,\n});\n\nconst setAnswer = (state, answer) => validateAnswer({\n    ...state,\n    answer,\n});\n\nconst validateAnswer = (state) => ({\n    ...state,\n    valid: state.answer === state.correctAnswer || state.answer.length < state.correctAnswer.length,\n});\n","import { clearAnswer, resetEquation, setFormula, updateAnswer } from './reducers';\n\nexport const store = {\n    state: setFormula({}, '#'),\n\n    reducers: {\n        clearAnswer(state) {\n            return clearAnswer(state);\n        },\n\n        updateAnswer(state, value) {\n            return updateAnswer(state, value);\n        },\n\n        newEquation(state) {\n            return resetEquation(state);\n        },\n\n        newFormula(state, formula) {\n            return setFormula(state, formula);\n        }\n    },\n\n    effects: (dispatch) => ({\n        async updateAnswerAsync(value, rootState) {\n            await dispatch.store.updateAnswer(value);\n\n            if (isInvalidAnswer(rootState.store, value)) {\n                await sleep(300);\n                await dispatch.store.clearAnswer();\n            } else if (isValidAnswer(rootState.store, value)) {\n                await sleep(200);\n                await dispatch.store.newEquation();\n            }\n        },\n\n        newFormulaAsync(state) {\n            const formula = prompt('Type new formula (# is digit placeholder)');\n            if (formula) {\n                dispatch.store.newFormula(formula);\n            }\n        }\n    }),\n};\n\nfunction isValidAnswer(state, value) {\n    const newState = updateAnswer(state, value);\n    return newState.answer === newState.correctAnswer;\n}\n\nfunction isInvalidAnswer(state, value) {\n    const newState = updateAnswer(state, value);\n    return !newState.valid;\n}\n\nfunction sleep(timeout) {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n}\n","import { init } from '@rematch/core';\nimport * as models from './models';\n\nconst store = init({\n    models,\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}